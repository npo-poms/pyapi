#!/usr/bin/env python3
"""
  Simple client to get the changes feed from the NPO Frontend API
"""
from io import TextIOWrapper
from sys import stdout

from npoapi import Media

client = Media().command_line_client("Get changes feed from the NPO Frontend API", exclude_arguments={"accept"})
client.add_argument('profile', type=str, nargs='?', help='Profile')
client.add_argument("-s", "--since", type=str, default=None)
client.add_argument('-m', "--max", type=int, default="100")
client.add_argument("--backwards", action="store_true")
client.add_argument("--no_check_profile", action="store_true")
client.add_argument("--check_profile", type=bool, default=None)
client.add_argument("--deletes", type=str, default="ID_ONLY", choices=("ID_ONLY", "EXCLUDE", "INCLUDE"))
client.add_argument("--tail", type=str, default=None,  choices=("ALWAYS", "IF_EMPTY", "NEVER"))
client.add_argument('-p', "--properties", type=str, default=None,
                    help="properties filtering")
client.add_argument("--reason_filter", type=str, default=None)
client.add_argument("--buffer_size", type=int, default="1000")

args = client.parse_args()
check_profile = None
if args.no_check_profile:
    check_profile = False

if args.check_profile != None:
    check_profile = args.check_profile

response = TextIOWrapper(client.changes_raw(
    profile=args.profile,
    since=args.since,
    limit=args.max,
    force_oldstyle=args.backwards,
    properties=args.properties,
    check_profile=check_profile,
    deletes=args.deletes,
    tail=args.tail,
    stream=True,
    reason_filter=args.reason_filter), encoding="UTF-8")

bufsize=args.buffer_size
buffer = response.read(bufsize)
count = 0
while len(buffer) > 0:
    stdout.write(buffer)
    stdout.flush()
    buffer = response.read(bufsize)
    count += 1

response.close()
stdout.flush()
client.exit()
#time.sleep(300)
